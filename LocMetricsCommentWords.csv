Word,Count
*,162
is,81
the,78
to,57
a,48
in,45
=,45
of,42
if,39
for,34
},33
{,33
be,32
this,30
we,30
@param,30
and,29
new,28
all,26
,25
+,25
it,24
instruction,22
first,21
return,20
its,19
are,19
/,18
have,18
color,18
then,17
TODO:,17
__instructions.add(this);,16
check,16
block,16
c,14
\,14
If,14
now,14
PHI,14
F2,13
at,13
@return,13
use,12
NOT-FINISHED!!!!@@@@@@@@@@@@@@@@@@@@@@@,12
can,12
not,11
throws,11
__p,11
with,11
or,11
->,11
from,11
Then,11
later,11
variable,11
pointer,10
while,10
Format,10
by,10
assign,10
import,10
that,9
will,9
but,9
|,9
need,9
var,9
create,9
after,9
load,8
buffer,8
writer,8
so,8
public,8
global,8
next,8
R6,8
colors,8
vars,8
CMP,8
no,8
arg2,8
into,8
C,7
edges,7
an,7
as,7
blocks,7
when,7
one,7
get,7
void,7
memory,7
register,7
used,7
\"\\,7
computed,7
case,7
__map2.get(__map1.get(instruction.arg1));,7
same,7
has,7
-,7
else,7
add,7
since,7
right,7
which,7
fix,6
Exception,6
arg1,6
list,6
out,6
address,6
writer.close();,6
ptr,6
\PrintWriter(fileName,\,6
There,6
\"\UTF-8"\);\,6
try,6
Direct,6
instructions,6
put,6
arg0,6
variables,6
because,6
move,6
both,6
F1,6
registers,6
buffer1,6
We,6
type,6
array,6
lex,6
time,6
loop,5
branch,5
phi,5
parser.next();,5
some,5
location,5
dont,5
catch(Exception,5
true;,5
boolean,5
wrong,5
s),5
PHI's,5
false;,5
cluster,5
name,5
alive,5
Parser,5
don't,5
assigned,5
means,5
number,5
parser,5
UnsupportedEncodingException,5
e),5
nodes,5
Lexer(fileName);,5
\FileNotFoundException,\,5
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,5
result,5
basic,5
Indirect,5
store,5
@Test,5
Token,4
output,4
here,4
insert,4
MOVE,4
R5,4
value,4
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,4
!=,4
main,4
sure,4
String,4
find,4
Didn't,4
null),4
mapping,4
code,4
order,4
\optimization,\,4
For,4
pointers,4
correct,4
left,4
error,4
Parser(lex);,4
there,4
These,4
relOp,4
whole,4
Something,4
finished,4
__SEP,4
function,4
shouldnt,4
Special,4
buffer2,4
always,4
BasicBlock,4
advance,4
last,4
neighbors,3
Successfully,3
needed,3
current,3
alrdy,3
writer.println(s,3
(i.e,3
bbs.get(i);,3
for(int,3
statement,3
very,3
Beginning,3
1),3
before,3
universe,3
\"\\n}"\);\,3
valid,3
interference,3
keep,3
chars,3
calling,3
__currToken,3
beginning,3
==,3
test,3
maxColors,3
SSA,3
just,3
do,3
base,3
i++),3
bb,3
i=0;,3
3,3
call,3
arg,3
bbs,3
constant,3
funcCall,3
every,3
2),3
MOV,3
null;,3
trick,3
again,3
should,3
assignment,3
simple,3
i<numBlocks;,3
previous,3
compute,3
\otherwise,\,3
indirect,3
each,3
ignore,3
>,3
remember:,3
doesnt,3
BRA,3
F3,3
__lx.nextToken();,3
end,3
//,3
corresponding,3
fixed,3
another,3
relation,3
point,2
__IR.print();,2
varName,2
Joined,2
CALL,2
part,2
\op,\,2
const,2
emulated,2
Error,2
class,2
set,2
WS,2
\"\);\,2
//New,2
there's,2
oracled,2
about,2
\loadsize,\,2
follow,2
Block,2
existed,2
tokenValue);,2
bad,2
push,2
Else,2
1st,2
\loadSize,\,2
back,2
currPc-sizeof(PHI)+1,2
complicated,2
continued..,2
ranges,2
To,2
pushed,2
coloring,2
done,2
identifier,2
destination,2
branches,2
local,2
__funUtil.getFunName(),2
writer.println(s);,2
where,2
Not,2
bbInd,2
inst.arg2,2
incoming,2
idea,2
Important,2
First,2
thing,2
predefined,2
:=,2
1,2
statSequence,2
<-,2
fake,2
ADD,2
detection,2
definition,2
\System.out.println("\C:\,2
configured,2
processor,2
__IR.putCode(fixed);,2
node,2
@author,2
update,2
merged,2
track,2
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,2
Can,2
backwards,2
Vars,2
norrathep,2
convert/invert,2
<,2
copy,2
\parameter,\,2
\System.out.println("\Direct\,2
\"\,\,2
whatever,2
Now,2
proper,2
duplicates,2
\__IR.putCode("\LOAD\,2
dest,2
only,2
link,2
contains,2
such,2
\block,\,2
work,2
The,2
comments,2
remove,2
also,2
argument,2
\here,\,2
exist,2
100,2
empty,2
reload,2
dangerous,2
shift,2
REG,2
def,2
\rsl.fix(__IR.getScopeName()+__currToken.getValue(),\,2
thus,2
buffers,2
\before,\,2
USE,2
doing,2
dirty,2
names,2
prev,2
2nd,2
31,2
advanced,2
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,2
addresses,2
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,2
\"\+c);\,2
pass,2
varDecl,2
here:,2
correctly,2
let,2
I,2
links,2
CMP+1,2
\,\,2
opcode,2
R2,2
generalize,2
change,2
__funUtil.findVarRealName(tokenValue),2
longer,2
already,2
source.getDestination();,2
inst,2
parameters),2
EOF,2
go,2
IR,2
formalParam,2
R3,2
below,2
either,2
direct,2
__IR.getANewVarAddress());,2
program,2
R[origc],2
-->,2
cond,2
c+1,2
any,2
pointer's,2
__IR.getANewVarAddress(),2
funName,2
way,2
jumping,2
Eat,2
ADDi,2
RET,2
(ptr),2
format,2
rsl.setFirstPart(rsl.getFirstPart(),2
sequential,2
assume,2
going,2
org.junit.Before;,1
Parser(fileName);,1
Motivation:,1
cases,1
\"\MOV\,1
form,1
statSequence(..),1
pointer.hashCode();,1
simply,1
\assertTrue(testRelationHelper("\3==x*y+z"\));\,1
things,1
MUL,1
\phi,\,1
FALSE:,1
iteration.,1
buffer1;,1
convenience,1
elimination,1
(,1
returnValue.getDestination(),1
RegisterArg(regNo++);,1
dealing,1
join,1
duplicate,1
Kill,1
(xxx),1
off,1
\jump,\,1
live,1
2001-08-07,1
\'array,\,1
anything,1
BGT,1
2,1
latest,1
explanation,1
it's,1
places,1
reached,1
(local,1
(152),1
DIV,1
spawned,1
fileName,1
IfStatement,1
PrintWriter,1
\assertTrue(testNumberHelper("\999"\));\,1
ParserTest,1
numBlocks,1
global),1
\rest,\,1
would,1
\assertFalse(testNumberHelper("\a"\));\,1
status,1
head,1
setUp(),1
exact,1
sign,1
identifiers,1
\'then',\,1
\"\variables"\,\,1
currPC))+1(for,1
\putCode(String,Index))\,1
Computed,1
generate,1
\assertFalse(testIdentHelper("\4"\));\,1
invalid,1
universe.iterator().next();,1
xCluster,1
methods,1
catch,1
\funName+"\."\;\,1
Dealing,1
testFactor(),1
want,1
phis,1
Got,1
reachable,1
idName,1
num.setDestination(idName);,1
jumpings,1
\assertFalse(testFactorHelper("\[a]"\));\,1
created,1
Identifier,1
>=,1
everything,1
dummy,1
directly,1
destBb,1
\reload,\,1
1.eat,1
interfered,1
edu.uci.ccai6.cs241.Parser;,1
\assertTrue(testFactorHelper("\(a)"\));\,1
\assertTrue(testDesignatorHelper("\a[3*y+x]"\));\,1
spilling,1
Lexer,1
here's,1
\'let',\,1
backward,1
path,1
org.junit.After;,1
SUB,1
(source.isConstant()),1
hopefully,1
java.io.FileNotFoundException;,1
testIdentHelper(String,1
called,1
b,1
clear,1
else:,1
never,1
color+100;,1
PTR,1
var@index,1
\'var',\,1
\assertTrue(testDesignatorHelper("\abdc"\));\,1
System.exit(0);,1
scope,1
rename,1
dst;,1
regMaps.put((PointerArg),1
non-interference,1
if(bb.nextDirect,1
operation,1
\char,\,1
split,1
ch,1
Set,1
prevIndirect,1
keywords,1
their,1
sort,1
Phi,1
\invalid,\,1
\"\used"\\,1
sorted,1
\'do',\,1
\b,\,1
fill,1
24>,1
0.Parameters,1
inserted,1
remap,1
Reg,1
org.junit.Assert.*;,1
\arg1,\,1
putCode(String),1
pop,1
------,1
Have,1
\assertTrue(testFactorHelper("\a[ab[4+s]*3+x]"\));\,1
currPc+2,1
\NOOP"\>\,1
step:,1
I'm,1
\'else',\,1
regMaps.get(inst.arg2);,1
R1->R2,1
\assertFalse(testIdentHelper("\A"\));\,1
\'od',\,1
infinite,1
know,1
java.io.PrintWriter;,1
testFactorHelper(String,1
method,1
nReg);,1
dst.getDestination();,1
inside,1
ERR,1
if(rel),1
\statement!"\);\,1
while:,1
unknown,1
:,1
keyword,1
colored,1
(returnValue.isPointer()),1
usage,1
TODO,1
come,1
variables/methods,1
needs,1
constructing,1
full,1
Rename,1
\used,\,1
(actual,1
well,1
R1,1
frame,1
Virtual,1
Auto-generated,1
Shifts:,1
\inst.arg2,\,1
\assertTrue(testIdentHelper("\abc"\));\,1
frames>,1
be:,1
skip,1
\xy"\));\,1
validColor,1
testRelationHelper(String,1
AssignDestination,1
IS,1
given,1
BRA),1
AND,1
testIdent(),1
parser.factor();,1
care,1
sets,1
clustering,1
comment,1
incorrect,1
enter,1
true);,1
bytes,1
funcDecl,1
branchOp,1
\assertFalse(testRelationHelper("\x=5"\));\,1
returnValue,1
pretty,1
curr+1+sizeof(PHIS),1
R[a]==0,1
increase,1
=>,1
Above,1
\maxColors,\,1
Called,1
make,1
on,1
neighborSet,1
first:,1
array[i][j][k],1
<Function,1
Follow,1
currPointer+2),1
side,1
\assertTrue(testDesignatorHelper("\abc[5]"\));\,1
sensible,1
life,1
int,1
example:,1
4;,1
putCode(Code),1
//jiajiajiajiajiajiajijia,1
detect,1
moveInsts,1
using,1
----------------,1
package,1
elts,1
combined,1
little,1
other,1
parser.designator();,1
if-no,1
\NOOP"\,\,1
test011.txt,1
(maybe,1
\assertTrue(testFactorHelper("\12351"\));\,1
Very,1
\"\ParserTest.txt"\;\,1
\list,\,1
Example:,1
\'procedure',\,1
\assertTrue(testNumberHelper("\1234577"\));\,1
(returnValue.isArray()),1
Machine,1
\PHI,\,1
ops,1
within,1
Note:,1
i,1
True:,1
\'main',\,1
params,1
through,1
\"\(20)\,1
\reportError("\Wrong\,1
data:,1
<fake,1
register;,1
sth(),1
above,1
jumped,1
give,1
Here's,1
havent,1
java,1
tearDown(),1
thought,1
Symbols,1
parser.relation();,1
without,1
converting,1
@Before,1
different,1
they,1
-------/----------,1
handling,1
instead,1
\==,!,<,>,-,+,/,*,(,),[,],{,},',',;,.,\,1
I),1
defReg,1
),1
\<24,\,1
if(bb.nextIndirect,1
lastUsed,1
parser.ident();,1
item,1
\assertTrue(testRelationHelper("\123\,1
2.Locals,1
wouldnt,1
\putCode(String,Index)\,1
too,1
..,1
realized,1
\assertTrue(testRelationHelper("\(5+2)!=5+2"\));\,1
generated,1
\b"\));\,1
parser.number();,1
if(bb.prevIndirect,1
syntax,1
exit,1
(10),1
Because,1
a[i]=,1
declare,1
\assertTrue(testDesignatorHelper("\a[ab[4+s]*3+x]"\));\,1
numInsts,1
hash,1
hard,1
testRelation(),1
\assertFalse(testNumberHelper("\12A"\));\,1
loader,1
\putCode(Code,Index)\,1
while?,1
happens..,1
java.io.UnsupportedEncodingException;,1
'fall,1
happen,1
size,1
pick,1
No,1
testNumber(),1
\anymore,\,1
c==R[origc],1
Comp,1
\assertTrue(testIdentHelper("\a"\));\,1
Pre-defined,1
offset,1
Bad,1
codes.get(0),1
development,1
chain,1
(153),1
java.io.File;,1
thankful,1
\System.out.println(bb.index+"\->"\+bb.nextIndirect.index);\,1
construction,1
\'call',\,1
\EOF,\,1
best,1
R28,1
(divisible,1
2.ignore,1
\a,\,1
loc,1
\algorithm,\,1
parameters,1
(currPc+1,1
Can't,1
heuristic,1
list:,1
exist..,1
generalize/abstract,1
\"\if"\\,1
good,1
\address,\,1
\System.out.println(bb.prevIndirect.index+"\<-"\+bb.index);\,1
state,1
\assertFalse(testDesignatorHelper("\aa[x<5]"\));\,1
could,1
regs),1
knowledge,1
\"\+bb.index+"\<-"\+bb.prevDirect.index);\,1
if(bb.prevDirect,1
available,1
still,1
setFakeRegs(List<String>,1
i.e,1
Load,1
\assertTrue(testRelationHelper("\a\,1
two,1
File(fileName).delete();,1
\assertFalse(testFactorHelper("\<"\));\,1
cap,1
been,1
locations,1
\assertTrue(testNumberHelper("\2"\));\,1
you,1
\assertFalse(testDesignatorHelper("\123[1]"\));\,1
1.Saved,1
\'if',\,1
bottoms,1
MATTERS,1
\defined,\,1
\'InputNum',\,1
NOOP,1
extension,1
assignedBlockNum,1
toString,1
CSE,1
numbers,1
next:,1
\'OutputNum',\,1
\assertFalse(testDesignatorHelper("\a[1)"\));\,1
popping,1
DLX,1
might,1
higher,1
if(regMaps.containsKey(inst.arg2)),1
\"\+bb.index+"\->"\+bb.nextDirect.index);\,1
errors,1
intersect,1
rest,1
pre-assigned,1
testDesignator(),1
System.out.println(e.getMessage());,1
select,1
prevDirect,1
tricky,1
flow,1
nextDirect,1
\<"\(20)"\,\,1
element,1
@After,1
5*hash,1
graph,1
forces,1
intersection,1
//import,1
chs,1
insertered,1
'OutputNewLine',1
if-else:,1
w/o,1
While,1
static,1
handled,1
edu.uci.ccai6.exception.ParserException;,1
\assertFalse(testNumberHelper("\3a"\));\,1
lecture,1
\"\1101"\>\,1
\is,\,1
\variable,\,1
testNumberHelper(String,1
------------------,1
\assertFalse(testIdentHelper("\cAe"\));\,1
defined,1
note,1
moves,1
org.junit.Test;,1
mf,1
more,1
\func(),\,1
otherwise,1
these,1
Mnemonic-to-Opcode,1
duplicated,1
symbol,1
Suppose,1
\assertTrue(testDesignatorHelper("\a[3+x]"\));\,1
nestNo,1
Needed,1
senseless,1
edu.uci.ccai6;,1
max(invalid)+1,1
Will,1
\<"\(20)\,1
jumpedAddrs,1
step,1
\number,\,1
op,1
\"\+nextPC);\,1
-31,1
work..,1
TLDR:,1
\'function','fi'\,1
successfully,1
requires,1
One,1
\assertFalse(testFactorHelper("\(a]"\));\,1
iterate,1
deadlock,1
recursion,1
subexpression,1
initializes,1
+=,1
who,1
\System.out.println("\NextPC:\,1
\assertTrue(testIdentHelper("\a4"\));\,1
RegisterArg,1
testDesignatorHelper(String,1
builder>,1
locals,1
many,1
Reload,1
{1-MAX_COLORS(8)},1
\assertTrue(testFactorHelper("\(2+5*c)"\));\,1
Insert,1
second,1
Wrong,1
(returnValue.isConstant()),1
legal,1
\array,\,1
LOAD,1
\AssignDestination(Conf.RETURN_VAL_NUM,\,1
\else,\,1
control,1
supposed,1
edu.uci.ccai6.cs241.Lexer;,1
traverse,1
special,1
////jiajiajiajiajiajiajijia,1
In,1
grow,1
setParameters(List<String>,1
stack,1
hack,1
overflow,1
think,1
4),1
\Thus,\,1
recursively,1
creates,1
lazy,1
prev:,1
tmp,1
NOTE:,1
Need,1
All,1
nReg,1
saved,1
\'return',\,1
Load_REG_1,1
This,1
Make,1
edge',1
Others,1
\means,\,1
followPtr,1
functions:,1
deadCodeElimination();,1
12a,1
kill,1
reassign,1
\'while',\,1
common,1
nReg;,1
Haven't,1
easy,1
positive,1
\assertFalse(testRelationHelper("\3<-a"\));\,1
round,1
reserved,1
cnv.deadCodeElimination(bbs);,1
decrease,1
